#!groovy

import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.plugins.credentials.SystemCredentialsProvider
import com.cloudbees.plugins.credentials.CredentialsScope
import org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl
import hudson.util.Secret

// Add entry to credentails
def credentialId = "azure-cred"
def username = "{{ azureClientId }}"
def password = "{{ azureClientSecret }}"
def description = "Service principal credentials for connection to azure instance"
def credentials = new UsernamePasswordCredentialsImpl(
    CredentialsScope.GLOBAL,
    credentialId,
    description,
    username,
    password
)
    //Secret.fromString(password)

SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), credentials)
println("Credentials added: ${credentialId}")

credentialId = "vm-cred"
username = "{{ vmUsername }}"
password = "{{ vmPassword }}"
description = "Service principal credentials for connection to azure instance"
credentials = new UsernamePasswordCredentialsImpl(
    CredentialsScope.GLOBAL,
    credentialId,
    description,
    username,
    password
)
    //Secret.fromString(password)

SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), credentials)
println("Credentials added: ${credentialId}")


credentialId = "db-cred"
username = "{{ dbUsername }}"
password = "{{ dbPassword }}"
description = "Service principal credentials for connection to azure instance"
credentials = new UsernamePasswordCredentialsImpl(
    CredentialsScope.GLOBAL,
    credentialId,
    description,
    username,
    password
)
    //Secret.fromString(password)

SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), credentials)
println("Credentials added: ${credentialId}")


credentialId = 'github-token'
description = "Token to push to repo new version"
credentials = new StringCredentialsImpl(
    CredentialsScope.GLOBAL,
    credentialId,
    description,
    Secret.fromString("{{ GITHUB_TOKEN }}")
)

SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), credentials)
println("Credentials added: ${credentialId}")



SystemCredentialsProvider.getInstance().save()
